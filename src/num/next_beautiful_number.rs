#![allow(dead_code)]
/*
2048. 下一个更大的数值平衡数
中等
相关标签
相关企业
提示
如果整数  x 满足：对于每个数位 d ，这个数位 恰好 在 x 中出现 d 次。那么整数 x 就是一个 数值平衡数 。

给你一个整数 n ，请你返回 严格大于 n 的 最小数值平衡数 。



示例 1：

输入：n = 1
输出：22
解释：
22 是一个数值平衡数，因为：
- 数字 2 出现 2 次
这也是严格大于 1 的最小数值平衡数。
示例 2：

输入：n = 1000
输出：1333
解释：
1333 是一个数值平衡数，因为：
- 数字 1 出现 1 次。
- 数字 3 出现 3 次。
这也是严格大于 1000 的最小数值平衡数。
注意，1022 不能作为本输入的答案，因为数字 0 的出现次数超过了 0 。
示例 3：

输入：n = 3000
输出：3133
解释：
3133 是一个数值平衡数，因为：
- 数字 1 出现 1 次。
- 数字 3 出现 3 次。
这也是严格大于 3000 的最小数值平衡数。


提示：

0 <= n <= 106
 */
struct Solution;
/*
1： 1
2： 22
3： 122，333
4： 1333，4444
5： 14444，22333，55555
6： 122333，155555，224444，666666
7： 1224444
 */
impl Solution {
    pub fn next_beautiful_number(n: i32) -> i32 {
        if n < 1 {
            return 1;
        }
        if n < 22 {
            return 22;
        }
        if n < 221 {
            return help(n, 122);
        }
        if n < 333 {
            return 333;
        }
        if n < 3331 {
            return help(n, 1333);
        }
        if n < 4444 {
            return 4444;
        }

        return 1224444;
    }
}

fn help(n: i32, value: i32) -> i32 {
    todo!()
}